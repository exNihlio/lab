version: "3"
services:
  registry:
    domainname: "{{ registry.domainname }}"
    environment:
      REGISTRY_HTTP_ADDR: "0.0.0.0:5443"
      REGISTRY_HTTP_TLS_CERTIFICATE: "/certs/live/registry.sami.dog/fullchain.pem"
      REGISTRY_HTTP_TLS_KEY: "/certs/live/registry.sami.dog/privkey.pem"
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Lab Registry Realm
    hostname: "{{ registry.hostname }}"
    image: "{{ registry.image }}:{{ registry.tag }}"
    network_mode: "host"
    ports:
      - "5443:5443"
    restart: unless-stopped
    volumes:
      - /data/disks/registry/auth:/auth:ro
      - /data/disks/registry/storage:/var/lib/registry
      - /data/disks/config/certs:/certs:ro
  portainer:
    command: --sslcert /certs/live/portainer.sami.dog/fullchain.pem --sslkey /certs/live/portainer.sami.dog/privkey.pem
    domainname: "{{ registry.domainname }}"
    hostname: "{{ registry.hostname }}"
    image: "{{ portainer.image }}:{{ portainer.tag }}"
    network_mode: "host"
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /data/disks/config/certs:/certs:ro
      - /data/disks/config/portainer/storage:/data
  repo:
    domainname: "{{ repo.domainname }}"
    hostname: "{{ repo.hostname }}"
    image: "{{ repo.image }}:{{ repo.tag }}"
    network_mode: "host"
    restart: "unless-stopped"
    volumes:
      - /data/disks/nginx/repos:/usr/share/nginx/html:ro
      - /data/disks/nginx/conf:/etc/nginx/conf.d:ro
      - /data/disks/config/certs:/certs:ro
  drone_server:
    domainname: "{{ cicd.domainname }}"
    environment:
      DRONE_DATABASE_DRIVER: "/data/database.sqlite"
      DRONE_SERVER_HOST: "{{ cicd.hostname }}.{{ cicd.domainname }}"
      DRONE_SERVER_PROTO: "https"
      DRONE_SERVER_PORT: ":8443"
      DRONE_TLS_CERT: /certs/live/{{cicd.hostname}}.{{cicd.domainname}}/fullchain.pem
      DRONE_TLS_KEY: /certs/live/{{cicd.hostname}}.{{cicd.domainname}}/privkey.pem
      DRONE_USER_CREATE: "username:drone-admin,admin:true,token:{{cicd.admintoken}}"
    hostname: "{{ cicd.hostname }}"
    image: "{{ cicd.image }}:{{ cicd.tag }}"
    network_mode: "host"
    restart: "unless-stopped"
    volumes:
      - /data/disks/config/certs:/certs:ro
      - drone-db:/data
volumes:
  drone-db:
